#!/bin/sh

source $SCRIPT_DIR/stages/lib/patch_tarball

function build_dkms () {
    echo "actual version detected: $ACTUAL_VERSION"
    # bring the tarball from before into this directory
    rsync -av ../yum-packaging-nvidia-driver/nvidia-kmod-${ACTUAL_VERSION}-${ARCH}.tar.xz $PWD/
    
    # set up build
    mkdir -p BUILD BUILDROOT RPMS SRPMS SOURCES SPECS
    # convert tarball to use VERSION instead of ACTUAL_VERSION
    patch_tarball "nvidia-kmod" "$ACTUAL_VERSION" "$ARCH" "tar.xz"

    # patch the .spec file to use newer compiler version
    sed -i '/^Requires:\(.*\)dkms$/a Requires:\tdevtoolset-9-gcc' dkms-nvidia.spec
    # sed -i 's|^dkms build|PATH=\$PATH:opt/rh/devtoolset-9/root/bin dkms build|' dkms-nvidia.spec
    # also patch the dkms configuration
    sed -i "s|'make'|'PATH=\$PATH:/opt/rh/devtoolset-9/root/bin make'|" dkms-nvidia.conf
    cp dkms-nvidia.conf SOURCES/


    cp dkms-nvidia.spec SPECS/  
    rpmbuild \
        --define "%_topdir $(pwd)" \
        --define "debug_package %{nil}" \
        --define "version $VERSION" \
        --define "driver_branch latest-dkms" \
        --define "is_dkms 1" \
        --define "is_latest 1" \
        --define "epoch 3" \
        --target "${ARCH}" \
        -v -bb SPECS/dkms-nvidia.spec
    [ -n $VERBOSE ] && echo ">>> COPYING DKMS TO OUTPUT..."
    find -name "*.rpm" -exec cp -v {} $OUTPUT/ \;
}
